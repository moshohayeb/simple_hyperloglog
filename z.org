* TODO Emacs
| Command              | Key | Description                   | Note                            |
|----------------------+-----+-------------------------------+---------------------------------|
| what-cursor-position |     | face info of current position | C-u gives many additional infos |

** load-path 

A location where emacs looks for files to load when using =require= (=describe-variable load-path=)

* Spacemacs

** packages are loaded alphabetically =with-eval-after-load= magic needed
** layer/init-xxx usually only contains use-package macro

* Helm
** TODO Minibuffer
| Command                      | Key         | Description                         |
|------------------------------+-------------+-------------------------------------|
| helm-yank-selection          | C-y         | Paste clipboard into the minibuffer |
| helm-kill-selection-and-quit | C-u C-c C-k | Copy helm selection to clipboard    |

** Secondary
| Command              | Key | Description                                         |
|----------------------+-----+-----------------------------------------------------|
| spacemacs/helm-faces |     | see all spacemacs and gives the option to configure |

* Autocomplete
| command | Description        |
|---------+--------------------|
| C-j     | next-candidate     |
| C-k     | previous-candidate |
| *c-l*   | complete selection |

* Yasnippet

Note that auto-complete can be used as an alternative to company

** commands
| command | Description              |
|---------+--------------------------|
| SPC i s | insert snippet from helm |
| M-l     | hippie expand            |

* Projectile
  
* Flycheck
Prefix is **e**
** Primary commands

| keymap  | Description                  | notes             |
|---------+------------------------------+-------------------|
| SPC e h | describe flycheck checker    |                   |
| SPC e l | display a list of all errors |                   |
| SPC e v | verify setup                 |                   |
| SPC e n | next error                   |                   |
| SPC e p | previous error               |                   |
| SPC e s | select checker               | e.g. gcc vs clang |
| SPC e e | describe error at point      |                   |

** Useful links
| Description                                          | link |
|------------------------------------------------------+------|
| list of supported languages and checkers             | [[http://www.flycheck.org/en/latest/languages.html#flycheck-languages][link]] |
| list of recommended packages for additional features | [[http://www.flycheck.org/en/latest/community/extensions.html#c-c-objective-c][link]] |

** Secondary commands
| command                 | Description                                                             |
|-------------------------+-------------------------------------------------------------------------|
| flycheck-verify-checker | check if a particular checker (e.g. clang) is available and can be used |
| hoo                     |                                                                         |

** Package configuration
| configuration              | Description                                    |
|----------------------------+------------------------------------------------|
| flycheck-idle-change-delay | do syntac check after idle this amount of secs |

* To Document
- projectile
- orgmode [[https://github.com/syl20bnr/spacemacs/tree/master/layers/%252Bemacs/org][link]] 
- helm
- ibuffer [[https://github.com/syl20bnr/spacemacs/tree/master/layers/%252Bemacs/ibuffer][link]] (later)
- git [[https://github.com/syl20bnr/spacemacs/tree/master/layers/%252Bsource-control/git][link]]
- deft
- ranger
- flyspell (only in org)
- color packages (later)
- avy
- evil & adding text objects (s/c for string, g for )]} )
- ycmd 
- semantic
- c/c++
* Major Modes
** C/C++
*** Keys
| Command                     | Key | Description               |
|-----------------------------+-----+---------------------------|
| srefactor-refactor-at-point | , r | Refactor symbol at cursor |

** Notes
- Used mode is =c-mode-map=

*** Prerequiestes
  - GNU Global compiled with universal-ctags
  - clang-format
*** Todo
* Orgmode
| Command               | Keybinding | Description                         |
|-----------------------+------------+-------------------------------------|
| org-cycle-list-bullet | ¬†   -      | change list format (bullet/numbers) |

* Navigation
** [[https://github.com/syl20bnr/spacemacs/tree/master/layers/%252Btags/cscope][check cscope]]
** gtags
| command         | Description                       |
|-----------------+-----------------------------------|
| M-x ^helm-gtags | create tags                       |
| SPC m g c       | create tags                       |
| SPC m g d       | find definiton                    |
| SPC m g G       | find definiton based on context   |
| SPC m g i       | list tags in current function     |
| SPC m g I       | list tags in current file         |
| *SPC m g n*     | go to next tag in history         |
| *SPC m g p*     | go to previous tag in history     |
| *SPC m g r*     | find rtags (reverse tags or uses) |
| SPC m g R       | resume helm session               |
| SPC m g S       | show stack of visited location    |
| SPC m g s       | apropos project tags              |
| *SPC m g u*     | update tags                       |

** imenu-list
| command | Description                         |
|---------+-------------------------------------|
| SPC b i | toggle imenu                        |
| q       | quit imenu buffer                   |
| RET     | go to entry                         |
| d       | display entry (keep focus on imenu) |
| f       | fold/unfold                         |

* Documentation
Documentation is provided by
- dash.el
- helm-dash
| Command | Description        |
|---------+--------------------|
| SPC d h | helm dash at point |
| SPC d d | dash at point      |

install docsets via =helm-dash-install-doc-set=
* Ace Window
| Command    | Key | Description             |
|------------+-----+-------------------------|
| ace-window | M-w | Trigger ace-window      |

When selecting a window to activate, a one of the following chars can be entered to perform the action
| ~          | x   | Delete                  |
| ~          | m   | Swap                    |
| ~          | n   | Select previous window  |
| ~          | j   | Open buffer in window   |
| ~          | v   | Split vertically        |
| ~          | b   | Split horizontally      |
| ~          | o   | Maximize current window |
| ~          | ?   | Help                    |
